<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sql Injection | Scott Alan Henry]]></title>
  <link href="http://scottalan.github.io/blog/categories/sql-injection/atom.xml" rel="self"/>
  <link href="http://scottalan.github.io/"/>
  <updated>2014-10-30T16:27:37-05:00</updated>
  <id>http://scottalan.github.io/</id>
  <author>
    <name><![CDATA[scottalan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Help -- SA-CORE-2014-005 Hack]]></title>
    <link href="http://scottalan.github.io/blog/2014/10/30/helpll-sa-core-2014-005-hack/"/>
    <updated>2014-10-30T16:17:01-05:00</updated>
    <id>http://scottalan.github.io/blog/2014/10/30/helpll-sa-core-2014-005-hack</id>
    <content type="html"><![CDATA[<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Awesome code snippet</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This might at least help find malicious code that could have been injected in module files. Does a cool side-by-side diff and exports to a file so you can easily move through the file and see any differences.</p>

<p>In the following command make sure to put the &lsquo;good&rsquo; drupal install before the potentially &lsquo;bad&rsquo; or existing install.</p>

<p>In this case &lsquo;drupal&rsquo; is just a <code>git clone --branch 7.x http://git.drupal.org/project/drupal.git</code> and a <code>git checkout 7.32</code> and &lsquo;pre-update&rsquo; is my old drupal install that I want to check for malicious code.</p>

<p><code>
diff -r -y --left-column drupal pre-update  &gt; dirdiff.txt
</code></p>

<p>This does a recursive (-r) diff and places the results side-by-side (-y) in a file. The (&mdash;left-column) makes it easier to spot the diff.</p>

<p>On mac you can just hold down <code>fn + (down arrow)</code></p>

<p>Something else you can do for any code you may have been version controlling (we all version control our custom code, right?):</p>

<p>I looked back through my git branches, as I tend to keep them for quite sometime, and I found a branch that I had labeled updates-10-13-14 so I know that these are any updates I may have pushed on the 13th of October. This is two days before the &lsquo;catastrophe&rsquo; so this code shouldn&rsquo;t be affected. I&rsquo;m working with the Panopoly distro as my base install so all of my custom code exists in sites/all and that&rsquo;s what I push to GitHub. In the sites directory I placed a directory called: old_all. So here is what I did:</p>

<p>From your sites directory:</p>

<p><code>
mkdir old_all
cd old_all
git init
git remote add origin git@github.com:scottalan/[NAME_OF_REPO].git
git fetch origin
git checkout origin/updates-10-13-14
</code></p>

<p>Now I have my PRE &lsquo;possible hack&rsquo; code in old_all and where ever I am now in the original all directory. Now it&rsquo;s just a matter of running the diff command.</p>

<p><code>diff -r -y --left-column old_all all  &gt; all-diff.txt</code></p>

<p>Now I can see a side by side diff of the changes. Of course you will see things that you recognize changing but keep an eye out for anything that doesn&rsquo;t seem quite right.</p>

<p>Good Luck!</p>

<p>-Scott</p>
]]></content>
  </entry>
  
</feed>
